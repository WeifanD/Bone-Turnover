getwd()
setwd("C:/Users/Blair/Documents/Decathlon/Bone-TO")
getwd()
install.packages("TCGAbiolinks")
install.packages("dplyr")
install.packages("Rtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("TCGAbiolinks")
install.packages("BiocManager")
browseVignettes("TCGAbiolinks")
# install package
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TCGAbiolinks")
browseVignettes("TCGAbiolinks")
BiocManager::install("TCGAbiolinks")
library(TCGAbiolinks)
query <- GDCquery(project = "TCGA-BRCA",
data.category =  "transcriptome profiling",
data.type = "Isoform Expression Quantification",
legacy = FALSE,
file.type = "BCGSC miRNA Profiling")
getResults(query, cols = c("cases"))
query <- GDCquery(project = "TCGA-BRCA",
data.category =  "Transcriptome Profiling",
data.type = "Isoform Expression Quantification",
legacy = FALSE,
file.type = "BCGSC miRNA Profiling")
getResults(query, cols = c("cases"))
# donwload TCGA
query <- GDCquery(project = "TCGA-BRCA",
data.category =  "Transcriptome Profiling",
data.type = "Isoform Expression Quantification",
legacy = FALSE,
workflow.type = "BCGSC miRNA Profiling")
getResults(query, cols = c("cases"))
length(getResults(query, cols = c("cases")))
samplesDown <- getResults(query, cols = c("cases")))
samplesDown <- getResults(query, cols = c("cases"))
samplesDown
tables(substr(samplesDown,14,15))
table(substr(samplesDown,14,15))
class(samplesDown)
library(stringr)
table(str_locate(samplesDown,14,15))
table(str_sub(samplesDown,14,15))
cat('总样本数量：', length(samplesDown))
dataSmTP <- TCGAquery_SampleTypes(samplesDown, "TP")
cat('总TP样本数量：', length(dataSmTP))
# donwload TCGA
GDCdownload(query, method = "client", directory = "example_data_dir", files.per.chunk = 6)
getwd()
work_dir <- getwd()
data_dir <- paste0(word_dir, '/GDC/', gsub("-","_",project))
file_data_dir <- paste0(data_dir, "_", "miRNA.rda")
GDCdownload(query, method = "client", directory = data_dir, files.per.chunk = 6)
# donwload TCGA
work_dir <- getwd()
gsub("-","_","TCGA-BRCA")
str_replace("-","_","TCGA-BRCA")
data_dir <- paste0(word_dir, '/GDC/', gsub("-","_","TCGA-BRCA"))
data_dir <- paste0(work_dir, '/GDC/', gsub("-","_","TCGA-BRCA"))
file_data_dir <- paste0(data_dir, "_", "miRNA.rda")
GDCdownload(query, method = "client", directory = data_dir, files.per.chunk = 6)
setwd("C:/Users/Blair/Documents/Decathlon/Bone-TO")
data_dir
GDCdownload(query, method = "client", directory = data_dir, files.per.chunk = 6)
# combine data files to one file
raw_data <- GDCprepare(query, save = TRUE, directory = data_dir, save.filename = file_data_dir)
View(raw_data)
file_data_dir
data <- read.table(file_data_dir, header = TRUE, stringsAsFactors = FALSE, row.names = 1)
new_data <- raw_data %>%
mutate(miRBase_id = str_split(miRNA_region,',')[1])
library(dplyr)
new_data <- raw_data %>%
mutate(miRBase_id = str_split(miRNA_region,',')[1])
View(new_data)
str_split("mature,MIMAT0000062",',')
str_split("mature,MIMAT0000062",',')[2]
str_split("mature,MIMAT0000062",',')[[1]][2]
new_data <- raw_data %>%
mutate(miRBase_id = str_split(miRNA_region,',')[[1]][2])
new_data <- raw_data %>%
mutate(miRBase_id = str_split(miRNA_region,','))
new_data <- raw_data %>%
mutate(miRBase_id = str_split(miRNA_region,',')) %>%
map_chr(., 1))
new_data <- raw_data %>%
mutate(miRBase_id = str_split(miRNA_region,',')) %>%
map_chr(., 1)
new_data <- raw_data %>%
mutate(miRBase_id = str_extract(miRNA_region,'[^,]+$'))
new_data <- raw_data %>%
mutate(miRBase_id = str_extract(miRNA_region,'[^,]+$')) %>%
filter(!str_detect(miRBase_id,'^M*'))
str_detect("Mssda",'^M')
str_detect("Mssda",'^j')
new_data <- raw_data %>%
mutate(miRBase_id = str_extract(miRNA_region,'[^,]+$')) %>%
filter(!str_detect(miRBase_id,'^M'))
new_data <- raw_data %>%
mutate(miRBase_id = str_extract(miRNA_region,'[^,]+$')) %>%
filter(str_detect(miRBase_id,'^M'))
read_countdata <- dcast(new_data, miRBase_id ~ barcode, sum, value.var = 'read_count')
library(reshape2)
read_countdata <- dcast(new_data, miRBase_id ~ barcode, sum, value.var = 'read_count')
View(read_countdata)
read_countdata <- dcast(new_data, miRBase_id ~ barcode, sum, value.var = 'read_count') %>%
filter(!is.na(miRBase_id))
write.table(paste0(data_dir, "_", "miRNA_counts", "txt"), sep = '\t', row.names = F, quote = F)
write.table(paste0(data_dir, "_", "miRNA_counts", ".txt"), sep = '\t', row.names = F, quote = F)
write.table(read_countdata, paste0(data_dir, "_", "miRNA_counts", ".txt"), sep = '\t', row.names = F, quote = F)
write.table(read_countdata, paste0(data_dir, "_", "miRNA_counts", ".txt"), sep = '\t',
row.names = F, quote = F, col.names = T)
View(new_data)
new_data %>% mutate(a = str_sub(miRBase_id, 1,4)) %>% select(miRBase_id) %>% distinct()
new_data %>% mutate(a = str_sub(miRBase_id, 1,4)) %>% select(miRBase_id) %>% distinct()
miRNA_id_mature <- read.table('miRNA_mature.txt', header = TRUE, stringsAsFactors = FALSE, row.names = 1)
View(miRNA_id_mature)
miRNA_id_mature <- read.table('miRNA_mature.txt', header = TRUE, stringsAsFactors = FALSE, row.names = 0)
miRNA_id_mature <- read.table('miRNA_mature.txt', header = TRUE, stringsAsFactors = FALSE)
new_data <- raw_data %>%
mutate(miRBase_id = str_extract(miRNA_region,'[^,]+$')) %>%
filter(str_detect(miRBase_id,'^M')) %>%
left_join(miRNA_id_mature)
read_countdata <- dcast(new_data, miRNA_mature ~ barcode, sum, value.var = 'read_count') %>%
filter(!is.na(miRNA_mature))
write.table(read_countdata, paste0(data_dir, "_", "miRNA_counts", ".txt"), sep = '\t',
row.names = F, quote = F, col.names = T)
View(read_countdata)
View(miRNA_id_mature)
View(raw_data)
str_extract("mature,MIMAT0000062", '\\.(?=\\,)')
library(stringr)
str_extract("mature,MIMAT0000062", '\\.(?=\\,)')
str_extract("mature,MIMAT0000062", '\\[a-z]+(?=\\,)')
str_extract("mature,MIMAT0000062", '\\[a-z]+(?=\\,\\[a-z]+)')
str_extract("mature,MIMAT0000062", '\\[a-z]+(?=\\,\\[A-Z]+\\d+)')
str_extract("mature,MIMAT0000062", '\\,\\[A-Z]+\\d+')
str_extract("mature,MIMAT0000062", '\\d+')
str_extract("mature,MIMAT0000062", '\\[A-Z]+\\d+')
str_extract("mature,MIMAT0000062", '\\[A-Z]+')
str_extract("mature,MIMAT0000062", '\\A-Z+')
str_extract("mature,MIMAT0000062", '\\[A-Z]*')
str_extract("mature,MIMAT0000062", '\\[A-Z]')
str_extract("mature,MIMAT0000062", '[A-Z]+')
str_extract("mature,MIMAT0000062", '\\[a-z]+(?=\\,[A-Z]+\\d+)')
str_extract("mature,MIMAT0000062", '[a-z]+(?=\\,[A-Z]+\\d+)')
str_extract("mature", '[a-z]+(?=\\,[A-Z]+\\d+)')
str_extract("mature", '[a-z]+(?<\\,[A-Z]+\\d+)')
str_extract("mature", '(?<[a-z]+\\,)[A-Z]+\\d+')
str_extract("mature", '(?<=[a-z]+\\,)[A-Z]+\\d+')
str_extract("mature", '[a-z]+\\,([A-Z]+\\d+)')
str_extract("mature,sss2323", '[a-z]+\\,([A-Z]+\\d+)')
str_extract("mature,DDS2323", '[a-z]+\\,([A-Z]+\\d+)')
str_extract("mature", '(?<=[a-z]+\\,)[A-Z]+\\d+')
str_extract("mature", '(?<=[a-z]+\\,)[A-Z]+\\d+')[1]
str_extract("mature",'(?<=w+\\s{0,100},\\s{0,100})\\W+'
)
str_extract("mature",'(?<=w+\\,)\\W+')
str_extract("mature,AAA",'(?<=w+\\,)\\W+')
str_extract("mature,AAA",'(?<=w+\\s{0,100},\\s{0,100})\\W+')
str_extract("mature,AAA",'(?<=w+\\s{0,100},\\s{0,100})\\w+')
str_extract("mature,AAA",'(?<=w+,\\s)\\w+')
str_extract("mature,AAA",'\\w+')
str_extract("mature,AAA",'\\W+')
str_extract("mature,AAA",'(?<=w+,\\s)\\w+')
str_extract("mature,AAA",'(?<=mature,\\s)\\w+')
str_extract("mature,AAA",'(?<=mature,)\\w+')
str_extract("mature,AAA",'(?<=\\w+,)\\w+')
str_extract("mature,AAA",'(?<=\\w+\\,)\\w+')
str_extract("mature,AAA",'(?<=\\w+,)\\w+')
str_extract("mature,AAA",'(?<=w+,)\\w+')
str_extract("MFG: sss", "(?<=MFG:\\s)\\w+")
str_extract("MFG: sss", "(?<=\w+:\\s)\\w+")
str_extract("MFG: sss", "(?<=\\w+:\\s)\\w+")
str_extract("MFG: sss", "(?<=w+:\\s)\\w+")
str_extract("MFG: sss", perl('(?<=w+:\\s)\\w+'))
str_extract("MFG: sss", perl('(?<=w+:\\s)\\w+'))
v <- c("Optimal             <2.6  Desirable           2.6 - 3.3  Borderline high     3.4 - 4.0  High                4.1 - 4.8  Very high           >=4.9",
"Desirable       <5.2  Borderline high 5.2 - 6.1  High            >= 6.2",
"Desirable   <1.7  Borderline high 1.7 - 2.2  High      2.3 - 4.4  Very high >=4.5")
data.frame( text = v, stringsAsFactors = FALSE ) %>%
#Extract text between "High" and "Very", trim whirespace
dplyr::mutate( High = trimws( stringr::str_extract(text, "(?<=[^a-zA-Z] High).*(?=Very)") ) )
s <- "See item 7 Management's Discussion and Analysis. BlahBlahBlah. Item 7 Management's Discussion and Analysis. BlahBlahBlah. Item 8 Financial Statements and Supplementary Data."
str_extract_all(s, "(?<!See )[Ii]tem 7(.*)")
str_extract_all(s, "(?<!See ).*")
str_match("MFG: sss", "\\w+:\\s(\\w+)")
str_match("MFG: sss", "\\w+:\\s(\\w+)")[2]
new_data <- raw_data %>%
mutate(miRBase_id = str_match(miRNA_region,"\\w+,(\\w+)")[2])
library(dplyr)
new_data <- raw_data %>%
mutate(miRBase_id = str_match(miRNA_region,"\\w+,(\\w+)")[2])
View(new_data)
str_match('mature,MIMAT0000062',"\\w+,(\\w+)" )[2]
View(raw_data)
new_data <- raw_data %>%
mutate(miRBase_id = str_match(miRNA_region,'\\w+,(\\w+)')[2])
new_data <- raw_data %>%
mutate(miRBase_id = purrr::map_char(str_match(miRNA_region,'\\w+,(\\w+)')[2]))
new_data <- raw_data %>%
mutate(miRBase_id = purrr::map_chr(str_match(miRNA_region,'\\w+,(\\w+)')[2]))
new_data <- raw_data %>%
mutate(miRBase_id = str_match(miRNA_region,'\\w+,(\\w+)')[, 2])
View(new_data)
str_match("SSSS,sdasd",'\\w+,(\\w+)')[, 2]
str_match("SSSS,sdasd",'\\w+,(\\w+)')[2]
class(str_match("SSSS,sdasd",'\\w+,(\\w+)')[,2])
class(str_match("SSSS,sdasd",'\\w+,(\\w+)')[2])
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Clinical",
data.type = "Clinical Supplement",
data.format = "xml",
legacy = FALSE)
samplesDown <- getResults(query, cols = c("cases"))
cat('总样本数量：', length(samplesDown))
# load packages
library(TCGAbiolinks)
library(dplyr)
library(reshape2)
library(stringr)
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Clinical",
data.type = "Clinical Supplement",
data.format = "xml",
legacy = FALSE)
samplesDown <- getResults(query, cols = c("cases"))
cat('总样本数量：', length(samplesDown))
# donwload TCGA
work_dir <- getwd()
data_dir <- paste0(work_dir, '/GDC/', gsub("-","_","TCGA-BRCA"))
file_data_dir <- paste0(data_dir, "_", "clinical.rda")
GDCdownload(query, method = "api", directory = data_dir, files.per.chunk = 6)
# combine data files to one file and extract data
raw_data_cli <- GDCprepare(query, save = TRUE, directory = data_dir, save.filename = file_data_dir)
# combine data files to one file and extract data
clinical.patients <-  GDCprepare_clinic(query, clinical.info = "patient")
# combine data files to one file and extract data
clinical.patients <-  GDCprepare_clinic(query, clinical.info = "patient", directory = data_dir)
GDCdownload(query, method = "client", directory = data_dir, files.per.chunk = 6)
# combine data files to one file and extract data
clinical.patients <-  GDCprepare_clinic(query, clinical.info = "patient", directory = data_dir)
# combine data files to one file and extract data
clinical.patients <-  GDCprepare_clinic(query, clinical.info = "patient", directory = data_dir)
query <- GDCquery(project = "TCGA-BRCA",
data.category = "Clinical",
data.type = "Clinical Supplement",
file.type = "xml",
legacy = FALSE)
# combine data files to one file and extract data
clinical.patients <-  GDCprepare_clinic(query, clinical.info = "patient", directory = data_dir)
View(clinical.patients)
View(clinical.patients)
View(clinical.patients)
colnames(clinical.patients)
